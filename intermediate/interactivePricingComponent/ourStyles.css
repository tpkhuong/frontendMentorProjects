@import url("https://fonts.googleapis.com/css2?family=Manrope:wght@600;800&display=swap");

/* CSS variables */
:root {
  /* CSS variables */
  --color-strong-cyan: 174, 86%, 45%;
  --color-pri-soft-cyan: hsl(174, 77%, 80%);
  --color-pri-strong-cyan: hsl(var(--color-strong-cyan));
  --color-pri-strong-cyan-alpha: hsla(var(--color-strong-cyan), 0.9);
  --color-pri-light-grayish-red: hsl(14, 92%, 95%);
  --color-pri-light-red: hsl(15, 100%, 70%);
  --color-pri-pale-blue: hsl(226, 100%, 87%);
  --color-black: hsl(0, 0%, 0%);

  --color-neutral-white: hsl(0, 0%, 100%);
  --color-neutral-very-pale-blue: hsl(230, 100%, 99%);
  --color-neutral-light-grayish-blue-bar: hsl(224, 65%, 95%);
  --color-neutral-light-grayish-blue-toggle: hsl(223, 50%, 87%);
  --color-neutral-grayish-blue: hsl(225, 20%, 60%);
  --color-neutral-dark-blue: hsl(227, 35%, 25%);

  --manrope: "Manrope", sans-serif;

  --font-size-intro-para: calc(15 / 16 * 1rem);
  --font-size-200: 0.9375rem;
  --font-size-300: 1rem;
  --font-size-400: 1.25rem;
  --font-size-500: 1.5rem;
  --font-size-600: 1.75rem;
  --font-size-700: 2rem;

  --spacer-xxs: 0.5rem;
  --spacer-xs: 0.8rem;
  --spacer-s: 1rem;
  --spacer-m: 1.5rem;
  --spacer-l: 2rem;

  --font-weight-200: 200;
  --font-weight-300: 300;
  --font-weight-400: 400;
  --font-weight-500: 500;
  --font-weight-600: 600;
  --font-weight-700: 700;
  --font-weight-800: 800;
  --font-weight-900: 900;
}
/* CSS variables */

/* reset */

*,
*::before,
*::after {
  box-sizing: border-box;
}

body {
  font-family: var(--manrope);
  /* use color: revert for text that we dont want to be grayish blue */
  color: var(--color-neutral-grayish-blue);
}

h1,
h2,
h3,
h4,
body,
ul {
  margin: 0;
  /* figure, dl, and dd have default margin */
  /* font-weight: 100; */
}

h1,
h2,
h3,
h4 {
  line-height: 1;
}

p {
  line-height: 1.5;
}

a {
  text-decoration: none;
  color: var(--link-fg, var(--clr-neutral-900));
  font-weight: var(--fw-700);
  font-size: var(--fs-300);
}

a:hover,
a:focus {
  text-decoration: underline;
}

img {
  /* using object-fit for images. we have to set a height or a min-height on the image and the width of 100% 
  exception to the rule of setting a height. we can sometime use it on a child element.
  */
  max-width: 100%;
  /* we use max-width: 100% so when we have an img element inside of a div and we want to use flex which means the div will be a flex item
    the img will shrink and grow as its parent element shrink and grows
    */
  /* display: block; */
  height: auto;
}

ul[class],
li[class] {
  list-style: none;
  padding: 0;
}

/* Inherit fonts for inputs and buttons */
input,
button,
textarea,
select {
  font: inherit;
  color: inherit;
}

button {
  border: none;
}

/* button {

/* Remove all animations and transitions for people that prefer not to see them */
@media (prefers-reduced-motion: reduce) {
  *,
  *::before,
  *::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}

/* reset */

/* utilities */

/* we can use min-height on the element we want its height to be 100% */
html,
body {
  /* height: 100%; */
}
/* we can use min-height on the element we want its height to be 100% */

/* container wrapper */

.max-width {
  /* or the width we want our container/parent element to be */
  max-width: 350px;
  margin-inline-start: auto;
  margin-inline-end: auto;
  /* padding-inline-start: 16px;
  padding-inline-end: 16px; */
}

@media screen and (min-width: 90rem) {
  .max-width {
    max-width: 550px;
  }
}

.text-max-width-wrapper {
  max-width: 150px;
  margin-inline: auto;
}

/* container wrapper */

.flow-content > * + * {
  margin: var(--gap, 8px) 0 0 0;
}

/* @media screen and (min-width: 90rem){

} */

.columns {
  display: flex;
  flex-direction: column;
  /* flex-flow: column; */
}

.columns > * {
  flex: 1;
  flex-basis: 100%;
}

[class*="col-"] {
  flex-basis: var(--col-basis, 100%);
}

.col-1 {
  --col-basis: 25%;
}
.col-2 {
  --col-basis: 50%;
}
.col-3 {
  --col-basis: 75%;
}

[class*="btn-"] {
  background-color: var(--bg);
  color: var(--fg);
  padding: 12px;
  padding-inline: 46px;
  border-radius: 100vw;
}

.btn-light {
  --bg: var(--color-pri--light-red);
  --fg: var(--color-pri-light-grayish-red);
}

.btn-dark {
  --bg: var(--color-neutral-dark-blue);
  --fg: var(--color-pri-pale-blue);
}

@media screen and (min-width: 90rem) {
  [class*="btn-"] {
  }
}
/* test out [class*=btn-]{} 
.btn-light{
    --bg
    --fg
}
.btn-dark{
    --bg
    --fg
} 
*/
/* hide h2 which are title for our section element */
.visually-hidden:not(:focus):not(:active) {
  clip: rect(0 0 0 0);
  clip-path: inset(50%);
  height: 1px;
  overflow: hidden;
  position: absolute;
  white-space: nowrap;
  width: 1px;
}

.visually-hidden {
  position: absolute;
  overflow: hidden;
  clip: rect(0 0 0 0);
  height: 1px;
  width: 1px;
  margin: -1px;
  padding: 0;
  border: 0;
}
/* hide h2 which are title for our section element */

.darker-text-color {
  color: var(--color-black);
}

/* utilities */

/* general-styles */
/* general-styles */

/* general-layout */
/* general-layout */

/* individual sections */

/* has background image */
.pricing-component {
  background-image: url("./images/bg-pattern.svg");
  background-size: 85rem;
  background-repeat: no-repeat;

  padding: 24px;
  /* mobile size */
  text-align: center;
}

@media screen and (min-width: 90rem) {
  .pricing-component {
    background-size: 100rem;
  }
}

/* intro */

.intro {
  font-size: var(--font-size-intro-para);
  background-image: url("./images/pattern-circles.svg");
  background-repeat: no-repeat;
  background-size: 9.8rem;
  background-position-x: center;

  padding: 32px;
  padding-inline: 4px;
}

.intro P {
  font-size: calc((14 / 16) * 1rem);
}

.intro p:first-of-type {
  margin-block-end: 0;
}

.intro p:last-of-type {
  margin-block-start: 4px;
}

@media screen and (min-width: 90rem) {
  .intro {
    margin-block-start: 32px;
    padding: 48px;
    padding-block: 52px;
    background-size: 8.8rem;
    background-position-y: 8px;
  }
  .intro P {
    font-size: calc((17 / 16) * 1rem);
    display: inline;
    margin: 0;
  }
  .margin-bottom {
    margin-block-end: 16px;
  }
  .larger-text-size-laptop {
    font-size: 2rem;
  }
}
/* intro */

/* pricing-sells-pitch-container */

.pricing-sells-pitch-container {
  /* padding: 24px; */
  padding-block: 38px;
  margin-block-start: 32px;
  border-radius: 8px;
  background-color: var(--color-neutral-white);
  box-shadow: 0 100px 62px rgba(0, 0, 0, 0.07);
}

/* pricing-sells-pitch-container */

@media screen and (min-width: 90rem) {
  .pricing {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    grid-template-areas:
      "pageviews priceview"
      "slider slider"
      "toggle toggle";
    padding-inline: 38px;
  }
  .pageviews {
    grid-area: pageviews;
    align-self: center;
    justify-self: start;
    font-weight: var(--font-weight-800);
  }
}

/* pricing */

/* slider */

.slider {
  /* work with width of slider wrapper - the width of the .slider-icon-wrapper */
  /*if we plan to not use a flex display on the parent element slider: both of .slider-icon-wrapper and .bar-wrapper will be using
    transform: translate which will create its own stacking context
    we could use isolation: isolate on .slider to container both .slider-icon-wrapper and .bar-wrapper in the stacking context of .slider*/
  /* display: flex; */
  margin-block: 20px;
  padding-inline: 16px;
}

.slider-icon-wrapper {
  /* work with width of slider wrapper - the width of the .slider-icon-wrapper */
  height: 40px;
  width: 40px;
  border-radius: 50%;
  transform: translateX(0px);
  background-color: var(--color-pri-strong-cyan);
  background-image: url("./images/icon-slider.svg");
  background-repeat: no-repeat;
  background-position: center;
  box-shadow: 0 32px 423px var(--color-pri-strong-cyan-alpha);
}

.slider-icon-wrapper:hover {
  cursor: pointer;
}

.slider-icon-wrapper:focus,
.slider-icon-wrapper:hover {
  outline: 2px solid blue;
}

.bar-wrapper {
  /* work with width of slider wrapper - the width of the .slider-icon-wrapper */
  width: 100%;
  transform: translateY(24px);
  /* align-self: center;  */ /* since we are not using display: flex on its parent .slider */
  background-color: var(--color-neutral-light-grayish-blue-bar);
  border-radius: 100vw;
  overflow: hidden;
}

.bar {
  /* work with width of slider wrapper - the width of the .slider-icon-wrapper */
  width: 50%;
  height: 8px;
  background-color: var(--color-pri-soft-cyan);
}

@media screen and (min-width: 90rem) {
  .slider {
    grid-area: slider;
    padding-inline: 0px;
  }
}

/* slider */

/* priceview */

.priceview {
  display: flex;
  justify-content: center;
  /* for browsers that support gap */
  /* gap: 8px; */
}

/* for browsers that do not support flex: gap. add margin to price container or month span */

.price {
  font-weight: var(--font-weight-800);
  font-size: calc((34 / 16) * 1rem);
}

.priceview span:last-child {
  align-self: center;
  margin-inline-start: 8px;
}

@media screen and (min-width: 90rem) {
  .priceview {
    grid-area: priceview;
    justify-self: end;
  }
  .price {
    /* font-size: 2.7rem; */
    font-size: calc((43 / 16) * 1rem);
  }
}

/* priceview */

/* toggle */

/* toggle feature: when button is pressed/clicked set aria-checked to true then move span circle right */

.toggle-button[aria-checked="true"] .toggle-circle {
  transform: translateX(100%);
}

/* toggle feature: when button is pressed/clicked set aria-checked to true then move span circle right */
.toggle {
  display: flex;
  justify-content: center;
  align-items: center;
  /* using gap to the space between the elements or we can use a utility class on
  the flex container then use this declaration: margin-inline-start
  .margin-left-toggle-children > * + * {
  margin-inline-start: 4px;
  */
  gap: 8px;
  margin-block-start: 38px;
  font-size: calc((14 / 16) * 1rem);
}

/* .margin-left-toggle-children > * + * {
  margin-inline-start: 4px;
} */

.toggle-button {
  /* display: inline-block; */
  width: 42px;
  /* height of this element is based on its child the toggle-circle */
  padding: 4px;
  border-radius: 100vw;
  background-color: var(--color-neutral-light-grayish-blue-toggle);
}

.toggle-button:hover,
.toggle-button:focus {
  background-color: var(--color-pri-soft-cyan);
  cursor: pointer;
}

.toggle-circle {
  display: block;
  width: 16px;
  height: 16px;
  border-radius: 50%;
  background-color: var(--color-neutral-white);
}

.discount-percent-wrapper {
  font-size: calc((12 / 16) * 1rem);

  color: var(--color-pri-light-red);
  display: inline-block;
  padding: 2px;
  padding-inline: 8px;
  border-radius: 100vw;
  font-weight: var(--font-weight-800);
  background-color: var(--color-pri-light-grayish-red);
}

.discount-hide {
  position: absolute;
  overflow: hidden;
  clip: rect(0 0 0 0);
  height: 1px;
  width: 1px;
  margin: -1px;
  padding: 0;
  border: 0;
}

/* media query for toggle container */

@media screen and (min-width: 90rem) {
  .toggle {
    grid-area: toggle;
    margin-block-start: 16px;
    gap: 24px;
  }
  .discount-hide {
    position: initial;
    margin: 0px;
  }
}
/* media query for toggle container */

/* toggle */

/* pricing */

/* separator */

.separator {
  margin-block-start: 42px;
  margin-block-end: 24px;
  /* margin-inline: -24px; */
  height: 1px;
  background-color: var(--color-neutral-grayish-blue);
}

/* separator */

/* sells-pitch */

/* if we don't plan to add another element to the text-wrapper we can use this selector */

.box-wrapper:nth-of-type(2) {
  margin-block: 12px;
}

/* if we plan to add another element to the text-wrapper we can use this class
add it to the middle box-wrapper element
*/

.margin-top-bottom {
  margin-block: 12px;
}

.box-wrapper img {
  margin-inline-end: 16px;
}

.trail-btn {
  margin-block-start: 32px;
}

.trail-btn:hover,
.trail-btn:focus {
  color: var(--color-neutral-white);
  cursor: pointer;
}

.sells-pitch span {
  font-size: calc((14 / 16) * 1rem);
}

.sells-pitch button {
  font-size: calc((15 / 16) * 1rem);
}

@media screen and (min-width: 90rem) {
  .sells-pitch {
    padding-inline: 38px;
    display: flex;
    align-items: center;
    justify-content: space-between;
  }
  .separator {
    margin-block-end: 32px;
  }
  .box-wrapper {
    display: flex;
    align-items: baseline;
  }
  .trail-btn {
    margin: 0px;
  }
}

/* sells-pitch */

/* individual sections */

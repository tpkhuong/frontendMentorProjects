:root {
  --col-pri-red: hsl(0, 100%, 68%);

  --col-neutral-very-dark-blue: hsl(230, 29%, 20%);
  --col-neutral-light-grayish-blue: hsl(207, 33%, 95%);
  --col-neutral-grayish-blue: hsl(231, 7%, 65%);
  --col-neutral-dark-grayish-blue: hsl(230, 29%, 20%);

  /* headings, call-to-actions, navigation */
  --font-family-barlow-condensed: "Barlow Condensed", sans-serif;
  /* body */
  --font-family-barlow: "Barlow", sans-serif;
}

/* reset */

*,
*::before,
*::after {
  box-sizing: border-box;
}

/* code below is from inclusive design patterns */
/* html {
  font-size: calc(1em + 1vw);
} */

body {
  font-family: var(--font-family-barlow);
  /* use color: revert for text that we dont want to be grayish blue */
  /* color: var(--color-neutral-grayish-blue); */
}

h1,
h2,
h3,
h4,
body,
ul {
  margin: 0;
  /* figure, dl, and dd have default margin */
  /* font-weight: 100; */
}

h1,
h2,
h3,
h4 {
  line-height: 1;
}

p {
  line-height: 1.5;
}

a {
  text-decoration: none;
  color: var(--link-fg, var(--clr-neutral-900));
  font-weight: var(--fw-700);
  font-size: var(--fs-300);
}

a:hover,
a:focus {
  /* text-decoration: underline; */
}

a:focus {
  outline: 3px solid rgb(9, 138, 180);
  /* outline-offset: 2px; */
}

img {
  /* using object-fit for images. we have to set a height or a min-height on the image and the width of 100% 
  exception to the rule of setting a height. we can sometime use it on a child element.
  */
  max-width: 100%;
  /* we use max-width: 100% so when we have an img element inside of a div and we want to use flex which means the div will be a flex item
    the img will shrink and grow as its parent element shrink and grows
    */
  /* use display: block so our img fits the container.
    when we didnt have display: block on img element the image did not fill the container.
    there were some white space
    */
  display: block;
  height: auto;
}

ul[class],
li[class] {
  list-style: none;
  padding: 0;
}

/* Inherit fonts for inputs and buttons */
input,
button,
textarea,
select {
  font: inherit;
  color: inherit;
}

button {
  border: none;
}

/* button {

/* Remove all animations and transitions for people that prefer not to see them */
@media (prefers-reduced-motion: reduce) {
  *,
  *::before,
  *::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}

/* reset */

/* utilities */

/* skip link using attr selector */

[href="#main-content"] {
  position: absolute;
  top: 0;
  right: 100%; /* moves off screen */
}
[href="#main-content"]:focus {
  right: auto;
}

/* skip link using attr selector */

/* we can use min-height on the element we want its height to be 100% */
html,
body {
  height: 100%;
}
/* we can use min-height on the element we want its height to be 100% */

/* container wrapper */

.max-width {
  /* or the width we want our container/parent element to be */
  max-width: 350px;
  margin-inline-start: auto;
  margin-inline-end: auto;
  /* padding-inline-start: 16px;
  padding-inline-end: 16px; */
}

@media screen and (min-width: 90rem) {
  .max-width {
    max-width: 550px;
  }
}

.text-max-width-wrapper {
  max-width: 150px;
  margin-inline: auto;
}

/* container wrapper */

.flow-content > * + * {
  margin: var(--gap, 8px) 0 0 0;
}

/* @media screen and (min-width: 90rem){

} */

.columns {
  display: flex;
  flex-direction: column;
  /* flex-flow: column; */
}

.columns > * {
  /* flex:1 => flex-basis will be 0px */
  flex: 1;
  flex-basis: 100%;
}

[class*="col-"] {
  flex-basis: var(--col-basis, 100%);
}

.col-1 {
  --col-basis: 25%;
}
.col-2 {
  --col-basis: 50%;
}
.col-3 {
  --col-basis: 75%;
}

[class*="bg-"] {
  background-color: var(--bg, hsl(0, 100%, 100%));
  background-image: var(--bg-img, hsl(0, 100%, 100%));
  color: var(--fg, hsl(0, 0%, 0%));
}

[class*="btn-"] {
  background-color: var(--btn-bg);
  /* background-image: var(--btn-bg-img, hsl(0, 100%, 100%)); */
  text-transform: uppercase;
  color: var(--btn-fg);
  padding-block: 12px;
  padding-inline: 20px;
  /* margin-block-start: 34px; */
  border-radius: 6px;
  font-weight: 700;
  /* padding: 12px;
  padding-inline: 46px;
  border-radius: 100vw; */
}

.bg-dark {
  /* --bg: ; */
  --btn-fg: hsl(0, 100%, 100%);
  --btn-bg: var(--col-pri-red);
}

.bg-light {
  --bg: var(--col-neutral-very-grayish-blue);
  --fg: var(--col-neutral-grayish-blue);
}

.btn-light {
  /* --btn-bg: ; */
  /* --fg is declared in .bg-dark which is applied to the parent element of the element that has .btn-light */
  /* <div class="bg-dark">
      <button class="btn-light">hello</button>
    </div> */
  /* since <button> is a child of div with .bg-dark we can use --fg on div children */
  --btn-bg: var(--fg);
  --btn-fg: var(--col-pri-gradient-end);
}

.btn-dark {
  --btn-fg: hsl(0, 100%, 100%);
  --btn-bg: var(--col-pri-red);
}

.light-theme {
  background-color: var(--light-theme-bg);
  color: var(--light-theme-fg);
}

.dark-theme {
  background-color: var(--dark-theme-bg);
  color: var(--dark-theme-fg);
}

.low-bold {
  font-weight: 400;
}

.high-bold {
  font-weight: 700;
}

.uppercase-text {
  text-transform: uppercase;
}

.btn-light:hover,
.btn-light:focus {
  background: transparent;
  color: var(--fg);
  border: 0.1px solid currentColor;
}

.btn-dark:focus,
.btn-dark:hover {
  opacity: 0.7;
}

/* .btn-dark:hover,
.btn-dark:focus {
  background: transparent;
  color: var(--col-pri-button-bg);
  border: solid currentColor;
} */

button:hover,
a:hover {
  cursor: pointer;
}

/* test out [class*=btn-]{} 
.btn-light{
    --bg
    --fg
}
.btn-dark{
    --bg
    --fg
} 
*/
/* hide h2 which are title for our section element */
.visually-hidden:not(:focus):not(:active) {
  clip: rect(0 0 0 0);
  clip-path: inset(50%);
  height: 1px;
  overflow: hidden;
  position: absolute;
  white-space: nowrap;
  width: 1px;
}

/* .visually-hidden{
  position: absolute;
  overflow: hidden;
  width: 1px;
  height: 1px;
  clip: rect(1px 1px 1px 1px)
} */

.visually-hidden {
  position: absolute;
  overflow: hidden;
  clip: rect(0 0 0 0);
  height: 1px;
  width: 1px;
  margin: -1px;
  padding: 0;
  border: 0;
}

.skip-link {
  display: inline-block;
  border: 1px solid red;
  padding-block: 16px;
  padding-inline: 32px;
}

.light-shade-text {
  color: var(--col-neutral-grayish-blue);
}

.small-text {
  font-size: calc(12 / 16 * 1rem);
}

.letter-spacing {
  letter-spacing: 3px;
}

.margin-right {
  margin-inline-end: 6px;
}

/* hide h2 which are title for our section element */

/* individual sections */

/* banner */

header[role="banner"] {
  height: 100%;
}

/* hero-section */

.hero-section {
  min-height: 100%;
  position: relative;
  padding-inline: 28px;
  padding-block: 34px;
  background-image: url("images/illustration-devices.svg");
  background-repeat: no-repeat;
  background-size: 550px;
  background-position-x: 4px;
  background-position-y: 120px;
  /* flex declarations */
  /* to get app to look like design have to apply explicit margin-block-start to text-container */
  /* display: flex;
  flex-direction: column;
  justify-content: space-between; */
}

/* gray bg */

.hero-section::before {
  content: "";
  display: inline-block;
  position: absolute;
  background-color: var(--col-neutral-light-grayish-blue);
  z-index: -1;
  top: 0;
  right: 0;
  left: 50%;
  bottom: 41%;
  border-bottom-left-radius: 86px;
}

/* nav */

/* logo */

.navbar-container {
  display: flex;
  justify-content: space-between;
  align-items: center;
  font-family: var(--font-family-barlow-condensed);
}

/* .logo-container {
  width: max-content;
} */

/* flex items are intrinic */
.logo-container img {
  height: 28px;
}

/* button and modal */

.open-menu-btn,
.close-menu-btn {
  background: transparent;
  padding-inline: 0px;
}

.close-menu-btn img {
  width: 30px;
}

.open-menu-btn img,
.close-menu-btn img {
  height: 20px;
}
/* we change aria-pressed using JS */

/* when user click on hamburger btn */
[class="open-menu-btn"][aria-pressed="true"] {
  display: none;
}

/* makes close btn not show */
/* dafault state close btn*/
[class="open-menu-btn"][aria-pressed="false"] + [class="close-menu-btn"] {
  display: none;
}

/* make dialog/modal/mobile-nav not show */

/* dafault state modal/mobile-nav*/
[class="close-menu-btn"][aria-pressed="true"] + [role="dialog"] {
  /* display: none; */
  transition: transform ease-in 200ms;
  transform: translateY(-140%);
}

[class="close-menu-btn"][aria-pressed="false"] + [role="dialog"] {
  /* display: revert; */
  transition: transform ease-out 200ms;
  transform: translateY(0%);
}

/* mobile navigation and modal */

[class="dialog1"] {
  padding: 16px;
  padding-inline: 24px;
  position: fixed;
  /* from top */
  top: 98px;
  left: 28px;
  right: 28px;
  background-color: hsl(0, 100%, 100%);
  box-shadow: 0 1.7px 8.2px rgba(0, 0, 0, 0.022),
    0 4.1px 19.8px rgba(0, 0, 0, 0.032), 0 7.6px 37.3px rgba(0, 0, 0, 0.04),
    0 13.6px 66.6px rgba(0, 0, 0, 0.048), 0 25.5px 124.5px rgba(0, 0, 0, 0.058),
    0 61px 298px rgba(0, 0, 0, 0.08);
}

[id="mobile-navigation"] {
  text-align: center;
}

/* mobile navigation */

.separator {
  /* inline-block caused added space between separator and pricing link(li) 
    display: block on .separator did not add any space
    */
  /* display: inline-block; */
  display: block;
  background-color: lightgray;
  width: 100%;
  height: 1px;
  margin-block: 8px;
}

/* mobile link */

[id="mobile-navigation"] .navlink {
  display: inline-block;
  width: 100%;
  padding-block: 16px;
  font-weight: 700;
  text-transform: uppercase;
}

/* hide mobile navbar menu */

@media screen and (min-width: 25.9375rem) {
  .open-menu-btn,
  .dialog1 {
    display: none;
  }

  .logo-container img {
    width: 32px;
    height: 32px;
  }
}

/* desktop navigation */

[id="desktop-navigation"] {
  display: none;
}

@media screen and (min-width: 25.9375rem) {
  [id="desktop-navigation"] {
    display: revert;
  }

  [id="desktop-navigation"] .navlist {
    display: flex;
    gap: 52px;
    align-items: center;
  }

  [id="desktop-navigation"] .navlink {
    font-size: calc(20 / 16 * 1rem);
    font-weight: 700;
    text-transform: uppercase;
  }

  .desktop-navmenu-separator {
    width: 8px;
    height: 8px;
    border-radius: 50%;
    background-color: var(--col-neutral-grayish-blue);
  }

  [id="desktop-navigation"] .navitem:hover .navlink,
  [id="desktop-navigation"] .navlink:focus {
    border-bottom: 2px solid currentColor;
  }

  [id="desktop-navigation"] .navlink:focus {
    outline-offset: 2px;
  }
}

.text-container {
  max-width: 618px;
  margin-block-start: 405px;
}

/* hero-content */

/* title */
.text-container__title {
  font-family: var(--font-family-barlow-condensed);
}

.dark-bg-round-container {
  color: hsl(0, 100%, 100%);
  background-color: hsl(0, 0%, 0%);
  font-weight: 700;
  padding: 3px;
  padding-inline: 8px;
  border-radius: 100vw;
  font-size: calc(12 / 16 * 1rem);
  margin-inline-end: 6px;
}

.text-container__title {
  text-transform: uppercase;
  font-size: calc(42 / 16 * 1rem);
  margin-block-start: 16px;
}

.text-container__description {
  line-height: 1.2;
  display: inline-block;
  font-size: calc(18 / 16 * 1rem);
  margin-block: 24px;
}

.button-container__btn {
  margin-inline-end: 12px;
}

@media screen and (min-width: 25.9375rem) {
  .hero-section {
    padding-block: 68px;
    padding-inline: 188px;
    padding-block-end: 250px;
    background-size: 1100px;
    background-position: 1075px 215px;

    display: flex;
    flex-direction: column;
  }

  .text-container {
    margin-block-start: auto;
  }

  .dark-bg-round-container {
    font-size: calc(16 / 16 * 1rem);
    margin-inline-end: 16px;
  }
  .small-text {
    font-size: calc(16 / 16 * 1rem);
  }
  .text-container__title {
    font-size: calc(68 / 16 * 1rem);
    max-width: 20ch;
    margin-block-start: 26px;
  }
  .text-container__description {
    max-width: 28ch;
    font-size: calc(20 / 16 * 1rem);
    margin-block: 28px;
    margin-block-end: 58px;
  }
  .btn-dark {
    padding-inline: 26px;
    padding-block: 16px;
  }
}

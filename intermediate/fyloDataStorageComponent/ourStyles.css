/* CSS variables */
:root {
  /* CSS variables */
  --color-gradient-start: hsl(6, 100%, 80%);
  --color-gradient-end: hsl(335, 100%, 65%);
  --color-progress-bar-bg: hsl(227, 57%, 18%);

  --color-neutral-pale-blue: hsl(243, 100%, 93%);
  --color-neutral-grayish-blue: hsl(229, 7%, 55%);
  --color-neutral-dark-blue: hsl(228, 56%, 26%);
  --color-neutral-vary-dark-blue: hsl(229, 57%, 11%);

  --font-family-raleway: "Raleway", sans-serif;

  --font-size-intro-para: calc(15 / 16 * 1rem);
  --font-size-200: 0.9375rem;
  --font-size-300: 1rem;
  --font-size-400: 1.25rem;
  --font-size-500: 1.5rem;
  --font-size-600: 1.75rem;
  --font-size-700: 2rem;

  --spacer-xxs: 0.5rem;
  --spacer-xs: 0.8rem;
  --spacer-s: 1rem;
  --spacer-m: 1.5rem;
  --spacer-l: 2rem;

  --font-weight-200: 200;
  --font-weight-300: 300;
  --font-weight-400: 400;
  --font-weight-500: 500;
  --font-weight-600: 600;
  --font-weight-700: 700;
  --font-weight-800: 800;
  --font-weight-900: 900;
}
/* CSS variables */

/* reset */

*,
*::before,
*::after {
  box-sizing: border-box;
}

/* code below is from inclusive design patterns */
/* html {
  font-size: calc(1em + 1vw);
} */

body {
  font-family: var(--font-family-raleway);
  /* use color: revert for text that we dont want to be grayish blue */
  /* color: var(--color-neutral-grayish-blue); */
}

h1,
h2,
h3,
h4,
body,
ul {
  margin: 0;
  /* figure, dl, and dd have default margin */
  /* font-weight: 100; */
}

h1,
h2,
h3,
h4 {
  line-height: 1;
}

p {
  line-height: 1.5;
}

a {
  text-decoration: none;
  color: var(--link-fg, var(--clr-neutral-900));
  font-weight: var(--fw-700);
  font-size: var(--fs-300);
}

a:hover,
a:focus {
  text-decoration: underline;
}

img {
  /* using object-fit for images. we have to set a height or a min-height on the image and the width of 100% 
  exception to the rule of setting a height. we can sometime use it on a child element.
  */
  max-width: 100%;
  /* we use max-width: 100% so when we have an img element inside of a div and we want to use flex which means the div will be a flex item
    the img will shrink and grow as its parent element shrink and grows
    */
  /* display: block; */
  height: auto;
}

ul[class],
li[class] {
  list-style: none;
  padding: 0;
}

/* Inherit fonts for inputs and buttons */
input,
button,
textarea,
select {
  font: inherit;
  color: inherit;
}

button {
  border: none;
}

/* button {

/* Remove all animations and transitions for people that prefer not to see them */
@media (prefers-reduced-motion: reduce) {
  *,
  *::before,
  *::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}

/* reset */

/* utilities */

/* skip link using attr selector */

[href="#main"] {
  position: absolute;
  top: 0;
  right: 100%; /* moves off screen */
}
[href="#main"]:focus {
  right: auto;
}

/* skip link using attr selector */

/* we can use min-height on the element we want its height to be 100% */
html,
body {
  height: 100%;
}
/* we can use min-height on the element we want its height to be 100% */

/* container wrapper */

.max-width {
  /* or the width we want our container/parent element to be */
  max-width: 350px;
  margin-inline-start: auto;
  margin-inline-end: auto;
  /* padding-inline-start: 16px;
  padding-inline-end: 16px; */
}

@media screen and (min-width: 90rem) {
  .max-width {
    max-width: 550px;
  }
}

.text-max-width-wrapper {
  max-width: 150px;
  margin-inline: auto;
}

/* container wrapper */

.flow-content > * + * {
  margin: var(--gap, 8px) 0 0 0;
}

/* @media screen and (min-width: 90rem){

} */

.columns {
  display: flex;
  flex-direction: column;
  /* flex-flow: column; */
}

.columns > * {
  /* flex:1 => flex-basis will be 0px */
  flex: 1;
  flex-basis: 100%;
}

[class*="col-"] {
  flex-basis: var(--col-basis, 100%);
}

.col-1 {
  --col-basis: 25%;
}
.col-2 {
  --col-basis: 50%;
}
.col-3 {
  --col-basis: 75%;
}

[class*="btn-"] {
  background-color: var(--bg);
  color: var(--fg);
  padding: 12px;
  padding-inline: 46px;
  border-radius: 100vw;
}

.btn-light {
  --bg: var(--color-pri--light-red);
  --fg: var(--color-pri-light-grayish-red);
}

.btn-dark {
  --bg: var(--color-neutral-dark-blue);
  --fg: var(--color-pri-pale-blue);
}

/* test out [class*=btn-]{} 
.btn-light{
    --bg
    --fg
}
.btn-dark{
    --bg
    --fg
} 
*/
/* hide h2 which are title for our section element */
.visually-hidden:not(:focus):not(:active) {
  clip: rect(0 0 0 0);
  clip-path: inset(50%);
  height: 1px;
  overflow: hidden;
  position: absolute;
  white-space: nowrap;
  width: 1px;
}

/* .visually-hidden{
  position: absolute;
  overflow: hidden;
  width: 1px;
  height: 1px;
  clip: rect(1px 1px 1px 1px)
} */

.visually-hidden {
  position: absolute;
  overflow: hidden;
  clip: rect(0 0 0 0);
  height: 1px;
  width: 1px;
  margin: -1px;
  padding: 0;
  border: 0;
}
/* hide h2 which are title for our section element */

/* general style */

.bold {
  font-weight: 700;
}

.large-font {
  font-size: 2.5rem;
}

.smaller-font {
  font-size: 0.75rem;
}

.dark-shade-text {
  color: var(--color-neutral-vary-dark-blue);
}

.rounded-border {
  border-radius: 10px;
}

.logo-icon-container,
.data-capacity-bar-container {
  background-color: var(--color-neutral-dark-blue);
  padding: 38px;
}

.data-capacity-bar-container {
}

/* individual sections */

/* computer conponent */

.computer-component {
  min-height: 100%;
  display: flex;
  flex-flow: column nowrap;
  background: url("images/bg-mobile.png");
  background-repeat: no-repeat;
  padding-inline: 24px;
  justify-content: center;
  align-items: center;
}

/* data-storage-component */

.data-storage-component {
  /* margin-block: auto; */
  max-width: 1150px;
}

@media screen and (min-width: 23.5rem) {
  .computer-component {
    background-color: var(--color-neutral-vary-dark-blue);
    background-image: url("images/bg-desktop.png");
    background-repeat: no-repeat;
    background-size: contain;
    background-position-y: 450px;
  }
  .data-storage-component {
    display: flex;
    gap: 32px;
    /* margin: auto; */
  }
}

/* logo-icon-container */

.logo-icon-container {
  border-top-right-radius: 96px;
}

.icons-container {
  margin-block-start: 32px;
}

.icon-wrapper {
  background-color: var(--color-neutral-vary-dark-blue);
  display: inline-block;
  padding: 12px;
  padding-inline: 16px;
}

/* .icons-container > * + * {
  margin-inline-start: 16px;
} */

.icon-wrapper:not(:first-child) {
  margin-inline-start: 16px;
}

.icon-wrapper:nth-child(2) {
  padding-block-start: 16px;
}
.icon-wrapper:nth-child(3) {
  padding-block-start: 20px;
}

@media screen and (min-width: 23.5rem) {
  .logo-icon-container {
    padding-block-end: 40px;
    padding-inline-end: 50px;
  }
  .icons-container {
    margin-inline-end: 88px;
  }
}

/* data-capacity-bar-container */

.data-capacity-bar-container {
  margin-block-start: 16px;
  padding-inline: 28px;
  width: 305px;
}

@media screen and (min-width: 23.5rem) {
  .data-capacity-bar-container {
    /* since this element is a flex item and its parent is a flex item 
      when use margin: auto on its parent or use justify-content and align-items: center on its parent's parent
      our max-width: 625px is not working. we will use width: 625px at screen size not mobile
      */
    /* if the layout we use on the parent element of data-storage-component which is the .computer-comopnent element,
      (data-storage-component is the parent element of this div). if the layout cause the (data-storage-component) width to be intrinsic
      margin-inline: auto will take presedence over max-width.
      */
    /* we can use width: 625px at screen size 380px. 5px above mobile layout */
    /* max-width: 625px; */
    width: 550px;
    padding-inline: 42px;
    padding-block-start: 24px;
    margin-block-start: 0px;
    /* flex: 1; */
    align-self: flex-end;
  }
}

[class*="quote-bubble"] {
  background-color: hsl(0, 0%, 100%);
  width: max-content;
  display: flex;
  align-items: center;
  gap: 12px;
  padding: 16px;
  padding-block-start: 8px;
  padding-inline: 28px;
  color: var(--color-neutral-grayish-blue);
  font-weight: 700;
}

/* quote bubble desktop */
/* progress-bar-info-container */

[class="progress-bar-info-container"] {
  color: hsl(0, 0%, 100%);
}

.progress-bar-info-container > span:first-child {
  padding-inline: 16px;
  opacity: 0.8;
  display: inline-block;
  width: max-content;
}

.digit {
  margin-inline-end: 5px;
}

/* desktop-bubble */

.quote-bubble-desktop {
  display: none;
}

@media screen and (min-width: 23.5rem) {
  .quote-bubble-desktop {
    position: relative;
    display: flex;
    margin-inline-start: auto;
    margin-block-start: -64px;
    margin-block-end: 12px;
    border-bottom-right-radius: 0px;
  }

  .quote-bubble-desktop::after {
    content: "";
    border-width: 12px;
    border-style: solid;
    display: inline-block;
    /* width: 20px;
    height: 20px; */
    position: absolute;
    right: 0;
    bottom: -24px;
    border-top-color: hsl(0, 0%, 100%);
    border-right-color: hsl(0, 0%, 100%);
    border-left-color: transparent;
    border-bottom-color: transparent;
  }

  .progress-bar-info-container > span:first-child {
    padding-inline: 0px;
  }
}

/* progress-bar */

.progress-bar-wrapper {
  width: auto;
  border-radius: 100vw;
  overflow: hidden;
  padding: 4px;
  background-color: var(--color-progress-bar-bg);
  margin-block-start: 20px;
  margin-block-end: 12px;
}

.progress-bar {
  background: linear-gradient(
    var(--color-gradient-start),
    var(--color-gradient-end)
  );
  border-radius: 100vw;
  width: var(--progress-bar-value, 0%);
}
.circle {
  display: block;
  background-color: hsl(0, 0%, 100%);
  border-radius: 50%;
  width: 12px;
  height: 12px;
  transform: translateX(var(--circle-movement, 0px));
}

.circle:focus,
.circle:hover {
  outline: 2px solid lightblue;
}

.circle:hover {
  cursor: pointer;
}

.progress-bar-info-container > span {
  font-size: 0.8rem;
}

.flex-wrapper {
  display: flex;
  font-size: 0.8rem;
  font-weight: 700;
}

.flex-wrapper .margin-left-auto {
  margin-inline-start: auto;
}

.quote-bubble-mobile {
  margin-inline: auto;
  margin-block-start: 18px;
  margin-block-end: -74px;
}

/* mobile-bubble */
@media screen and (min-width: 23.5rem) {
  .quote-bubble-mobile {
    display: none;
  }
  .progress-bar-info-container > span {
    font-size: 0.9rem;
  }
}

/* quote bubble mobile */

:root {
  /* primary */
  --col-primary-orange: hsl(26, 100%, 55%);
  --col-primary-pale-orange: hsl(25, 100%, 94%);
  /* neutral */
  --col-neutral-vark-blue: hsl(220, 13%, 13%);
  --col-neutral-dark-grayish-blue: hsl(219, 9%, 45%);
  --col-neutral-grayish-blue: hsl(220, 14%, 75%);
  --col-neutral-light-grayish-blue: hsl(223, 64%, 98%);
  --col-neutral-bg-gray: hsl(230, 60%, 98%);
  --col-neutral-nav-gray: hsl(217, 3%, 51%);
  /* white and black */
  --col-neutral-white: hsl(0, 100%, 100%);
  --col-neutral-black: hsl(0, 0%, 0%);

  --box-shadow: 0px 0.3px 0.7px rgba(0, 0, 0, 0.02),
    0px 0.7px 1.7px rgba(0, 0, 0, 0.028), 0px 1.4px 3.3px rgba(0, 0, 0, 0.035),
    0px 2.5px 5.8px rgba(0, 0, 0, 0.042), 0px 4.6px 10.9px rgba(0, 0, 0, 0.05),
    0px 11px 26px rgba(0, 0, 0, 0.07);

  /* headings */
  /* --font-family-poppins: "Poppins", sans-serif; */
  /* body, call-to-actions */
  --font-family-kumbh: "Kumbh Sans", sans-serif;
}

/* margin collapse: when one of the element is block and the other element is inline-block
bottom margin on block and top margin on inline-block will not collapse. interesting
*/

/* reset */

*,
*::before,
*::after {
  box-sizing: border-box;
}

/* code below is from inclusive design patterns */
/* html {
  font-size: calc(1em + 1vw);
} */

body {
  color: var(--col-neutral-black);
  font-family: var(--font-family-kumbh);
  /* use color: revert for text that we dont want to be grayish blue */
  /* color: var(--color-neutral-grayish-blue); */
}

h1,
h2,
h3,
h4,
body,
ul,
hr {
  margin: 0;
  /* figure, dl, and dd have default margin */
  /* font-weight: 100; */
}

h1,
h2,
h3,
h4 {
  line-height: 1;
  font-family: var(--font-family-poppins);
}

p {
  line-height: 1.5;
}

a {
  text-decoration: none;
  color: var(--link-fg, var(--clr-neutral-black));
  font-weight: var(--fw-700);
  font-size: var(--fs-300);
}

a:hover,
a:focus {
  /* text-decoration: underline; */
}

a:focus {
  outline: 3px solid rgb(9, 138, 180);
  /* outline-offset: 2px; */
}

img {
  /* using object-fit for images. we have to set a height or a min-height on the image and the width of 100% 
  exception to the rule of setting a height. we can sometime use it on a child element.
  */
  max-width: 100%;
  /* we use max-width: 100% so when we have an img element inside of a div and we want to use flex which means the div will be a flex item
    the img will shrink and grow as its parent element shrink and grows
    */
  /* use display: block so our img fits the container.
    when we didnt have display: block on img element the image did not fill the container.
    there were some white space
    */
  display: block;
  height: auto;
}

ul[role],
li[role] {
  list-style: none;
  padding: 0;
}

/* Inherit fonts for inputs and buttons */
input,
button,
textarea,
select {
  font: inherit;
  color: inherit;
}

button {
  border: none;
}

/* button {

/* Remove all animations and transitions for people that prefer not to see them */
@media (prefers-reduced-motion: reduce) {
  *,
  *::before,
  *::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}

/* reset */

/* utilities */

/* skip link using attr selector */

[href="#main-content"] {
  position: absolute;
  top: 0;
  right: 100%; /* moves off screen */
}
[href="#main-content"]:focus {
  right: auto;
}

/* skip link using attr selector */

/* we can use min-height on the element we want its height to be 100% */
html,
body {
  height: 100%;
}
/* we can use min-height on the element we want its height to be 100% */

/* container wrapper */

.max-width {
  /* or the width we want our container/parent element to be */
  max-width: 1440px;
  margin-inline-start: auto;
  margin-inline-end: auto;
  /* padding-inline-start: 16px;
  padding-inline-end: 16px; */
}

/* @media screen and (min-width: 90rem) {
  .max-width {
    max-width: 550px;
  }
} */

.text-max-width-wrapper {
  max-width: 150px;
  margin-inline: auto;
}

/* container wrapper */

.flow-content > * + * {
  margin: var(--gap, 8px) 0 0 0;
}

/* @media screen and (min-width: 90rem){

} */

.columns {
  display: flex;
  flex-direction: column;
  /* flex-flow: column; */
}

.columns > * {
  /* flex:1 => flex-basis will be 0px */
  flex: 1;
  flex-basis: 100%;
}

[class*="col-"] {
  flex-basis: var(--col-basis, 100%);
}

.col-1 {
  --col-basis: 25%;
}
.col-2 {
  --col-basis: 50%;
}
.col-3 {
  --col-basis: 75%;
}

[class*="bg-"] {
  background-color: var(--bg, hsl(0, 100%, 100%));
  background-image: var(--bg-img, hsl(0, 100%, 100%));
  color: var(--fg, hsl(0, 0%, 0%));
}

/* change for next project */

[class*="-btn"] {
  padding: 0;
  background: transparent;
  /* background-color: var(--btn-bg); */
  /* background-image: var(--btn-bg-img, hsl(0, 100%, 100%)); */
  /* text-transform: uppercase; */
  /* color: var(--btn-fg, hsl(0, 100%, 100%)); */
  /* padding-block: 16px;
  margin-block-start: 34px;
  border-radius: 6px; */
  /* padding: 12px;
  padding-inline: 46px;
  border-radius: 100vw; */
}

.bg-dark {
  /* --bg: ; */
  --bg-img: var(--col-bg-image);
  --fg: var(--col-neutral-very-grayish-blue);
}

.bg-light {
  --bg: var(--col-neutral-very-grayish-blue);
  --fg: var(--col-neutral-grayish-blue);
}

/* .btn-primary .front-of-button {
  --btn-bg: var(--col-pri-strong-cyan);
}

.btn-primary.back-of-button {
  --btn-bg: var(--col-pri-back-bg);
}

.btn-secondary .front-of-button {
  --btn-bg: var(--col-pri-light-blue);
}

.btn-secondary.back-of-button {
  --btn-bg: var(--col-sec-back-bg);
} */

.btn-light {
  /* --btn-bg: ; */
  /* --fg is declared in .bg-dark which is applied to the parent element of the element that has .btn-light */
  /* <div class="bg-dark">
      <button class="btn-light">hello</button>
    </div> */
  /* since <button> is a child of div with .bg-dark we can use --fg on div children */
  --btn-bg: var(--col-neutral-white);
  --btn-fg: var(--col-pri-pink);
}

.btn-dark {
  --btn-bg-img: var(--col-bg-image);
  --btn-bg: ;
  --btn-fg: var(--col-neutral-very-grayish-blue);
}

.btn-accent {
  font-size: 0.75rem;
  font-weight: 700;

  padding: 12px;
  padding-inline: 56px;
  border-radius: 100vw;

  box-shadow: var(--box-shadow);

  --btn-bg: var(--col-pri-pink);
  --btn-fg: var(--col-neutral-white);
}

/* themes */

[class*="-theme"] {
  background-color: var(--theme-bg);
  color: var(--theme-fg);
}

.dark-theme {
  background-color: var(--dark-bg);
  color: var(--dark-fg);
  --dark-bg: var(--first-color);
}

.light-theme {
  background-color: var(--light-bg);
  color: var(--light-fg);
}

.accent-theme {
  background-color: var(--accent-bg);
  color: var(--accent-fg);
}

/* .light-theme {
  background-color: var(--light-theme-bg);
  color: var(--light-theme-fg);
}

.dark-theme {
  background-color: var(--dark-theme-bg);
  color: var(--dark-theme-fg);
} */

.low-bold {
  font-weight: 400;
}

.high-bold {
  font-weight: 700;
}

.uppercase-text {
  text-transform: uppercase;
}

.custom-margin {
  margin-block-start: 120px;
  margin-inline-start: 24px;
}

/* .btn-light:hover,
.btn-light:focus {
  background: transparent;
  color: var(--fg);
  border: 0.1px solid currentColor;
} */

.btn-dark:hover,
.btn-dark:focus {
  background: transparent;
  color: var(--col-pri-button-bg);
  border: solid currentColor;
}

button:hover,
a:hover {
  cursor: pointer;
}

/* test out [class*=btn-]{} 
.btn-light{
    --bg
    --fg
}
.btn-dark{
    --bg
    --fg
} 
*/
/* hide h2 which are title for our section element */
.visually-hidden:not(:focus):not(:active) {
  clip: rect(0 0 0 0);
  clip-path: inset(50%);
  height: 1px;
  overflow: hidden;
  position: absolute;
  white-space: nowrap;
  width: 1px;
}

/* .visually-hidden{
  position: absolute;
  overflow: hidden;
  width: 1px;
  height: 1px;
  clip: rect(1px 1px 1px 1px)
} */

.visually-hidden {
  position: absolute;
  overflow: hidden;
  clip: rect(0 0 0 0);
  height: 1px;
  width: 1px;
  margin: -1px;
  padding: 0;
  border: 0;
}

.skip-link {
  display: none;
  border: 1px solid red;
  padding-block: 16px;
  padding-inline: 32px;
}

@media screen and (min-width: 90rem) {
  .skip-link {
    display: inline-block;
  }
}

/* hide h2 which are title for our section element */

/* general styles */

[class="separator"] {
  display: block;
  width: 100%;
  height: 1px;
  background-color: lightgray;
}

.accent-color {
  color: var(--col-primary-orange);
}

/* individual sections */

/* header */

[id="header-one"] {
  padding: 24px;
}

/* mobile nav menu */

/* hamburger menu btn */

[id="header-style-wrapper"] {
  display: flex;
  align-items: center;
}

.open-mobile-menu-btn {
  transform: translateY(2px);
  margin-inline-end: 16px;
}

/* faded-bg-modal-wrapper element without active class will be hidden */
.faded-bg-modal-wrapper.active {
  /* this element will act as a stacking context container for our element with 
  bg black (faded) and navbar with white bg
  */
  /* position: fixed;
  inset: 0; */
  display: revert;
}

.faded-bg-modal-wrapper {
  display: none;
}

/* hide at desktop size */

@media screen and (min-width: 90rem) {
  [id="mobile-menu-navigation"] {
    display: none;
  }
  .faded-bg-modal-wrapper.active {
    display: none;
  }
  .open-mobile-menu-btn {
    display: none;
  }
}

/* when we use ::after the stacking context will apply ::after above/on top
of modal element in that case we will use order to get the result we want which is the modal to be
above/on top of the faded element wit the background color of black so we dont have to use a z-index
on modal element
.faded-bg-modal-wrapper::before {
  content: "";
  position: absolute;
  inset: 0;
  background-color: var(--col-neutral-black);
  opacity: 0.5;
}

*/

/** 
** this didnt give the effect we wanted **
different approach. keep the element faded-bg-modal-wrapper
but have two element then we will make the faded-bg-modal-wrapper element be the one that control the stacking context of its elements
**/

/** 
different approach. keep the element faded-bg-modal-wrapper
but have declare positon: fixed on both children of faded-bg-modal-wrapper since the order in our html file
the faded-bg-element is before mobile-modal.

the mobile-modal element will be on top / above the faded-bg-element
**/

.faded-bg-element {
  position: fixed;
  inset: 0;
  background-color: var(--col-neutral-black);
  opacity: 0.7;
}

.mobile-modal {
  /* declare z-index of 1, we want this element to be above the other element when user click on hamburger menu btn
  to show modal one
  */
  z-index: 1;
  position: fixed;
  top: 0;
  bottom: 0;
  left: 0;
  right: 30%;
  background-color: var(--col-neutral-white);
  padding: 24px;
}

.close-menu-btn {
  background: transparent;
}

.mobile-menu-navigation {
  margin-block-start: 48px;
  font-weight: 700;
  font-size: 1.2rem;
}

.mobile-menu-navigation .navlist > * + * {
  margin-block-start: 20px;
}

/* desktop navigation */

/* hide at mobile size */

[id="desktop-navigation"] {
  display: none;
}

@media screen and (min-width: 90rem) {
  [id="header-one"] {
    padding-inline: 0px;
    padding-block: 32px;
    padding-block-start: 20px;
  }
  [id="desktop-navigation"] {
    margin-inline-start: 64px;
    display: revert;
    color: var(--col-neutral-nav-gray);
  }

  [id="desktop-navigation"] .navlist {
    display: flex;
    gap: 32px;
  }

  /* one way to create space between list items */
  /* [id="desktop-navigation"] .navlist > * + * {
    margin-inline-start: 32px;
  } */

  /* another way to create space between list items */
  /* [id="desktop-navigation"] .navlist li:not(:last-child) {
    margin-inline-end: 16px;
  } */
  /* [id="desktop-navigation"] .navlist li:not(:first-child) {
    margin-inline-start: 16px;
  } */

  [id="desktop-navigation"] .navlink {
    position: relative;
  }

  [id="desktop-navigation"] .navlink::after {
    content: "";
    position: absolute;
    display: none;
    width: 100%;
    height: 4px;
    background-color: var(--col-primary-orange);
    top: 63px;
  }

  [id="desktop-navigation"] li:hover .navlink::after {
    display: block;
  }

  [id="desktop-navigation"] li:hover .navlink,
  [id="desktop-navigation"] li:focus .navlink {
    color: var(--col-neutral-vark-blue);
    font-weight: 700;
  }
}

/* cart */

.cart-avatar-img-wrapper path {
  fill: var(--col-neutral-black);
}

.cart-avatar-style-wrapper {
  margin-inline-start: auto;
  display: flex;
}

.cart-avatar-img-wrapper {
  height: 18px;
}

.open-cart-btn {
  position: relative;
  align-self: center;
}

.cart-quantity-display {
  display: none;
  position: absolute;
  top: -2px;
  right: -8px;
  background-color: var(--col-primary-orange);
  color: var(--col-neutral-white);
  font-size: 0.6rem;
  font-weight: 700;
  /* display: inline-block; */
  padding: 6px;
  padding-block: 1px;
  border-radius: 100vw;
}

[class*="bottom-cart-style-wrapper"] {
  color: var(--col-neutral-dark-grayish-blue);
}

[id="modal-two"] {
  max-width: 365px;
  display: none;
  /* declare z-index on modal-two to have it appear above other elements
  the way stacking context works is the element below will appear above the element above in the html
  structure
  */
  font-weight: 700;
  z-index: 1;
  position: fixed;
  top: 88px;
  border-radius: 8px;
  left: 10px;
  right: 10px;
  background: var(--col-neutral-white);
  box-shadow: var(--box-shadow);
}

.top-cart-style-wrapper {
  padding: 24px;
}

.bottom-cart-style-wrapper-empty {
  padding-block: 84px;
  display: none;
}

.bottom-cart-style-wrapper-empty span {
  display: block;
  width: max-content;
  margin-inline: auto;
}

.bottom-cart-style-wrapper-filled__details {
  display: flex;
  align-items: center;
}

.bottom-cart-filled-img-wrapper {
  flex-basis: 50px;
  border-radius: 4px;
  overflow: hidden;
}

.title-quantity-total-style-wrapper {
  margin-inline-start: 16px;
}

.title-quantity-total-style-wrapper .cart-selection-title {
  margin: 0;
  overflow: hidden;
  text-overflow: ellipsis;
}

/* element separator instead of using margin */
.cart-seprator {
  display: block;
  height: 5px;
}

.price-quantity__total {
  font-weight: 700;
  color: var(--col-neutral-black);
}

.trash-btn {
  margin-inline-start: auto;
}

.checkout-btn {
  background-color: var(--col-primary-orange);
  color: var(--col-neutral-white);
  display: block;
  text-align: center;
  border-radius: 8px;
  padding-block: 16px;
  margin-block-start: 28px;
}

.bottom-cart-style-wrapper-filled {
  display: none;
  padding: 24px;
}

.title-quantity-total-style-wrapper {
  font-weight: 400;
}

.show-cart {
  display: revert;
}

[class="user-avatar"] {
  max-width: 24px;
  padding: 0;
  background: transparent;
  margin-inline-start: 16px;
}

@media screen and (min-width: 90rem) {
  .cart-avatar-style-wrapper {
    position: relative;
  }

  /* .open-cart-btn:hover + [id="modal-two"],
  .open-cart-btn:focus + [id="modal-two"] {
    display: revert;
  } */

  [id="modal-two"] {
    position: absolute;
    top: 64px;
    left: -175px;
    right: -96px;
  }
  .cart-quantity-display {
    top: 10px;
  }
  [class="user-avatar"] {
    max-width: 50px;
    margin-inline-start: 48px;
    border-radius: 50%;
  }

  [class="user-avatar"]:hover img,
  [class="user-avatar"]:focus img {
    border: 2px solid var(--col-primary-orange);
  }

  [class="user-avatar"] img {
    border-radius: 50%;
  }
  .cart-avatar-img-wrapper path {
    fill: var(--col-neutral-nav-gray);
  }
}

/* header */

/* main */

/* lets have a class that will declare grid-column and grid-row and display:revert 
to show the img instead of working with z-index
*/

/* mobile img container */

.mobile-img-display {
  position: relative;
}

@media screen and (min-width: 90rem) {
  .mobile-img-display {
    display: none;
  }
}

.mobile-img-display-controller-container {
  /* since we are using position: absolute, it will make our element intrinic which means the width will be
  based on its content we will use width: 100%
  */
  /* width: 100%; */
  /* or use left: 0px and right: 0px since our element is position: absolute */
  position: absolute;
  padding-inline: 24px;
  display: flex;
  justify-content: space-between;
  /* center vertically */
  /* top: 0px;
  bottom: 0px; */
  height: min-content;
  margin-block: auto;
  /* since we are not using width: 100% we will use inset: 0px which is like declaring left: 0px, right: 0px, top: 0px, bottom: 0px */
  inset: 0px;
}

/* previous and next arrow mobile img section */

[class="mobile-img-display"] .arrow-btn {
  padding: 10px;
  border-radius: 50%;
}

/** 

arrow btn looks more centered adding padding-inline

**/

/* previous btn */

[class="mobile-img-display"] button[aria-label="previous image"] {
  padding-inline-end: 12px;
}

/* next btn */

[class="mobile-img-display"] button[aria-label="next image"] {
  padding-inline-start: 12px;
}
/* set height on previous arrow img to match next arrow img size */

.mobile-img-display [aria-label="previous-image"] img {
  height: 13.833px;
}

.arrow-btn {
  background-color: var(--col-neutral-white);
}

.mobile-img-display .arrow-img-wrapper {
  display: block;
  width: 10px;
}

.mobile-images-container__img-container {
  display: none;
}

.mobile-images-container__img-container > img {
  max-height: 300px;
  min-width: 375px;
}

/* declaration below will work for screen size 414px. we want the img width to be 414px */
@media screen and (min-width: 414px) {
  .mobile-images-container__img-container > img {
    min-width: 414px;
  }
}

.active-show-img {
  display: revert;
  /* might not need display: grid */
  /* grid-column: 1 / 2;
  grid-row: 1 /2; */
}

/* desktop image container */

/* not show for mobile display */

[class="desktop-img-display"],
[id="modal-three"] {
  display: none;
}

@media screen and (min-width: 90rem) {
  [class="desktop-img-display"] {
    display: revert;
  }
}

/* product details section */

.product-details {
  padding: 24px;
}

.product-details__company-name {
  font-size: 0.8rem;

  text-transform: uppercase;
}

.product-details__sneaker-name {
  font-size: 1.8rem;
  margin-block-start: 16px;
}

.product-details__description {
  font-size: 0.95rem;
  color: var(--col-neutral-dark-grayish-blue);
}

.product-details__price-style-wrapper {
  font-weight: 700;
}

.product-details__price-style-wrapper,
.price-style-wrapper__discount-price-wrapper {
  display: flex;
  align-items: center;
}

.discount-price-wrapper__discount-price {
  font-size: 1.8rem;
}

.discount-price-wrapper__percent {
  margin-inline-start: 16px;
  background-color: var(--col-primary-pale-orange);
  padding: 4px;
  padding-inline: 10px;
  border-radius: 4px;
}

.product-details__price-style-wrapper .regular-price {
  color: var(--col-neutral-grayish-blue);
  position: relative;
  margin-inline-start: auto;
}

.product-details__price-style-wrapper .regular-price::after {
  content: "";
  display: block;
  position: absolute;
  background-color: currentColor;
  width: 100%;
  height: 2px;
  /* center vertically */
  top: 0px;
  bottom: 0px;
  margin-block: auto;
}

/* quantity control */

.quantity-controller-cart-btn__button-quantity-display {
  margin-block: 24px;
  margin-block-end: 16px;

  display: flex;
  /* padding: 24px;
  padding-block: 16px; */
  border-radius: 8px;
  /* to show our border-radius since our buttons are at both of the edges of this element
  we will declare overflow: hidden
  */
  overflow: hidden;
}

/* to center our input */

.quantity-controller-cart-btn__button-quantity-display button:first-child {
  margin-inline-end: auto;
}

.quantity-controller-cart-btn__button-quantity-display button:last-child {
  margin-inline-start: auto;
}

.quantity-buttons {
  padding: 16px;
  /* border-radius: 8px; */
}

.quantity-buttons,
.quantity-controller-cart-btn__button-quantity-display,
[id="quantity-display"] {
  background-color: var(--col-neutral-bg-gray);
}

[id="quantity-display"] {
  padding: 0;
  border: 0;
  font-weight: 700;
  text-align: center;
}

/* add to cart btn */

/* cart image in add to cart btn */

.add-to-cart-button path,
.add-cart-not-focusable-img-wrapper path {
  fill: var(--col-neutral-white);
}

.add-to-cart-button span,
.add-cart-not-focusable-img-wrapper path {
  margin-inline-start: 8px;
}

.add-cart-img-wrapper,
.add-to-cart-button span,
.trash-btn img,
.cart-avatar-img-wrapper {
  pointer-events: none;
}

.add-cart-img-wrapper,
.add-cart-not-focusable-img-wrapper {
  height: 18px;
}

.add-cart-not-focusable {
  opacity: 0.5;
}

.add-to-cart-button,
.add-cart-not-focusable {
  background-color: var(--col-primary-orange);
  color: var(--col-neutral-white);
  font-weight: 700;
  display: none;
  width: 100%;
  border-radius: 8px;
  padding-block: 16px;
  justify-content: center;
  align-items: center;
  box-shadow: var(--box-shadow);
}

.add-flex-display {
  display: flex;
}

/* show helper declaration */

.show-element {
  display: revert;
}

.active {
  display: revert;
}

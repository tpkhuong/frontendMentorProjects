:root {
  /* primary */
  /* text and social media */
  --col-primary-grayish-blue: hsl(237, 18%, 59%);
  /* top text color */
  --col-primary-soft-red-top: hsl(344, 61%, 57%);
  /* bottom text color */
  --col-primary-soft-red-bottom: hsl(345, 95%, 68%);
  /* neutral */
  --col-neutral-dark-blue-top: hsl(240, 21%, 22%);
  --col-neutral-dark-blue-bottom: hsl(236, 21%, 26%);
  --col-neutral-black-blue-bg: hsl(234, 17%, 12%);
  --col-neutral-vary-dark-blue: hsl(235, 16%, 14%);
  --col-neutral-dark-purple-bg: hsl(266, 19%, 14%);
  /* white and black */
  --col-neutral-white: hsl(0, 100%, 100%);
  --col-neutral-black: hsl(0, 0%, 0%);

  --box-shadow: 0px 0.3px 0.7px rgba(0, 0, 0, 0.02),
    0px 0.7px 1.7px rgba(0, 0, 0, 0.028), 0px 1.4px 3.3px rgba(0, 0, 0, 0.035),
    0px 2.5px 5.8px rgba(0, 0, 0, 0.042), 0px 4.6px 10.9px rgba(0, 0, 0, 0.05),
    0px 11px 26px rgba(0, 0, 0, 0.07);

  /* headings */
  /* --font-family-poppins: "Poppins", sans-serif; */
  /* body, call-to-actions */
  --font-family-red-hat: "Red Hat Text", sans-serif;
}
/* 
put opacity on the backgroung-color: hsla()
not on the element
*/

/* margin collapse: when one of the element is block and the other element is inline-block
bottom margin on block and top margin on inline-block will not collapse. interesting
*/

/* reset */

*,
*::before,
*::after {
  box-sizing: border-box;
}

/* code below is from inclusive design patterns */
/* html {
  font-size: calc(1em + 1vw);
} */

body {
  color: var(--col-primary-grayish-blue);
  font-family: var(--font-family-red-hat);
  /* use color: revert for text that we dont want to be grayish blue */
  /* color: var(--color-neutral-grayish-blue); */
}

h1,
h2,
h3,
h4,
body,
ul,
hr {
  margin: 0;
  /* figure, dl, and dd have default margin */
  /* font-weight: 100; */
}

h1,
h2,
h3,
h4 {
  line-height: 1;
  font-family: var(--font-family-poppins);
}

p {
  line-height: 1.5;
}

a {
  text-decoration: none;
  color: var(--link-fg, var(--clr-neutral-black));
  font-weight: var(--fw-700);
  font-size: var(--fs-300);
}

a:hover,
a:focus {
  /* text-decoration: underline; */
}

a:focus {
  outline: 3px solid rgb(9, 138, 180);
  /* outline-offset: 2px; */
}

img {
  /* using object-fit for images. we have to set a height or a min-height on the image and the width of 100% 
  exception to the rule of setting a height. we can sometime use it on a child element.
  */
  max-width: 100%;
  /* we use max-width: 100% so when we have an img element inside of a div and we want to use flex which means the div will be a flex item
    the img will shrink and grow as its parent element shrink and grows
    */
  /* use display: block so our img fits the container.
    when we didnt have display: block on img element the image did not fill the container.
    there were some white space
    */
  display: block;
  height: auto;
}

ul[role],
li[role] {
  list-style: none;
  padding: 0;
}

/* Inherit fonts for inputs and buttons */
input,
button,
textarea,
select {
  font: inherit;
  color: inherit;
}

button {
  border: none;
}

/* button {

/* Remove all animations and transitions for people that prefer not to see them */
@media (prefers-reduced-motion: reduce) {
  *,
  *::before,
  *::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}

/* reset */

/* utilities */

/* skip link using attr selector */

[href="#main-content"] {
  position: absolute;
  top: 0;
  right: 100%; /* moves off screen */
}
[href="#main-content"]:focus {
  right: auto;
}

/* skip link using attr selector */

/* we can use min-height on the element we want its height to be 100% */
html,
body {
  height: 100%;
}
/* we can use min-height on the element we want its height to be 100% */

/* container wrapper */

.max-width {
  /* or the width we want our container/parent element to be */
  max-width: 1250px;
  margin-inline-start: auto;
  margin-inline-end: auto;
  /* padding-inline-start: 16px;
  padding-inline-end: 16px; */
}

/* @media screen and (min-width: 70rem) {
  .max-width {
    max-width: 550px;
  }
} */

.text-max-width-wrapper {
  max-width: 150px;
  margin-inline: auto;
}

/* container wrapper */

.flow-content > * + * {
  margin: var(--gap, 8px) 0 0 0;
}

/* @media screen and (min-width: 70rem){

} */

.columns {
  display: flex;
  flex-direction: column;
  /* flex-flow: column; */
}

.columns > * {
  /* flex:1 => flex-basis will be 0px */
  flex: 1;
  flex-basis: 100%;
}

[class*="col-"] {
  flex-basis: var(--col-basis, 100%);
}

.col-1 {
  --col-basis: 25%;
}
.col-2 {
  --col-basis: 50%;
}
.col-3 {
  --col-basis: 75%;
}

[class*="bg-"] {
  background-color: var(--bg, hsl(0, 100%, 100%));
  background-image: var(--bg-img, hsl(0, 100%, 100%));
  color: var(--fg, hsl(0, 0%, 0%));
}

/* change for next project */

[class*="-btn"] {
  padding: 0;
  background: transparent;
  /* background-color: var(--btn-bg); */
  /* background-image: var(--btn-bg-img, hsl(0, 100%, 100%)); */
  /* text-transform: uppercase; */
  /* color: var(--btn-fg, hsl(0, 100%, 100%)); */
  /* padding-block: 16px;
  margin-block-start: 34px;
  border-radius: 6px; */
  /* padding: 12px;
  padding-inline: 46px;
  border-radius: 100vw; */
}

.bg-dark {
  /* --bg: ; */
  --bg-img: var(--col-bg-image);
  --fg: var(--col-neutral-very-grayish-blue);
}

.bg-light {
  --bg: var(--col-neutral-very-grayish-blue);
  --fg: var(--col-neutral-grayish-blue);
}

/* .btn-primary .front-of-button {
  --btn-bg: var(--col-pri-strong-cyan);
}

.btn-primary.back-of-button {
  --btn-bg: var(--col-pri-back-bg);
}

.btn-secondary .front-of-button {
  --btn-bg: var(--col-pri-light-blue);
}

.btn-secondary.back-of-button {
  --btn-bg: var(--col-sec-back-bg);
} */

.btn-light {
  /* --btn-bg: ; */
  /* --fg is declared in .bg-dark which is applied to the parent element of the element that has .btn-light */
  /* <div class="bg-dark">
      <button class="btn-light">hello</button>
    </div> */
  /* since <button> is a child of div with .bg-dark we can use --fg on div children */
  --btn-bg: var(--col-neutral-white);
  --btn-fg: var(--col-pri-pink);
}

.btn-dark {
  --btn-bg-img: var(--col-bg-image);
  --btn-bg: ;
  --btn-fg: var(--col-neutral-very-grayish-blue);
}

.btn-accent {
  font-size: 0.75rem;
  font-weight: 700;

  padding: 12px;
  padding-inline: 56px;
  border-radius: 100vw;

  box-shadow: var(--box-shadow);

  --btn-bg: var(--col-pri-pink);
  --btn-fg: var(--col-neutral-white);
}

/* themes */

[class*="-theme"] {
  background-color: var(--theme-bg);
  color: var(--theme-fg);
}

.dark-theme {
  background-color: var(--dark-bg);
  color: var(--dark-fg);
  --dark-bg: var(--first-color);
}

.light-theme {
  background-color: var(--light-bg);
  color: var(--light-fg);
}

.accent-theme {
  background-color: var(--accent-bg);
  color: var(--accent-fg);
}

/* .light-theme {
  background-color: var(--light-theme-bg);
  color: var(--light-theme-fg);
}

.dark-theme {
  background-color: var(--dark-theme-bg);
  color: var(--dark-theme-fg);
} */

.low-bold {
  font-weight: 400;
}

.high-bold {
  font-weight: 700;
}

.uppercase-text {
  text-transform: uppercase;
}

.custom-margin {
  margin-block-start: 120px;
  margin-inline-start: 24px;
}

/* .btn-light:hover,
.btn-light:focus {
  background: transparent;
  color: var(--fg);
  border: 0.1px solid currentColor;
} */

.btn-dark:hover,
.btn-dark:focus {
  background: transparent;
  color: var(--col-pri-button-bg);
  border: solid currentColor;
}

button:hover,
a:hover {
  cursor: pointer;
}

/* test out [class*=btn-]{} 
.btn-light{
    --bg
    --fg
}
.btn-dark{
    --bg
    --fg
} 
*/
/* hide h2 which are title for our section element */
.visually-hidden:not(:focus):not(:active) {
  clip: rect(0 0 0 0);
  clip-path: inset(50%);
  height: 1px;
  overflow: hidden;
  position: absolute;
  white-space: nowrap;
  width: 1px;
}

/* .visually-hidden{
  position: absolute;
  overflow: hidden;
  width: 1px;
  height: 1px;
  clip: rect(1px 1px 1px 1px)
} */

.visually-hidden {
  position: absolute;
  overflow: hidden;
  clip: rect(0 0 0 0);
  height: 1px;
  width: 1px;
  margin: -1px;
  padding: 0;
  border: 0;
}

.skip-link {
  display: none;
  border: 1px solid red;
  padding-block: 16px;
  padding-inline: 32px;
}

@media screen and (min-width: 70rem) {
  .skip-link {
    display: inline-block;
  }
}

/* hide h2 which are title for our section element */

/* min-width for hours and seconds digit elements */

.min-width-digit-element {
  min-width: 81.2px;
}

/* general styles */

.soft-red-color {
  color: var(--col-primary-soft-red-bottom);
}

[role="button"] {
  background-color: var(--btn-bg, var(--col-neutral-white));
  color: var(--btn-fg, var(--col-primary-soft-red-bottom));
}

main[role="main"] {
  height: 100%;
  background: var(--col-neutral-dark-purple-bg);
}

.app-style-wrapper {
  /* border: 1px solid red; */
  /*
  use declaration below if we want to declare margin-top on social media icon container
  border: .1px solid transparent; 
  will cause margin to not collapse
  */
  min-height: 100%;
  display: flex;
  justify-content: center;
  flex-direction: column;
  max-width: 750px;
  margin-inline: auto;
  position: relative;
}

/* individial sections */

/* background images section */

.countdown-background-style-wrapper {
  max-width: 1440px;
  height: 100%;
  padding-block-start: 148px;
  /* padding-block-end: 48px; */
  background-image: url("./images/bg-stars.svg"),
    url("./images/pattern-hills.svg"),
    linear-gradient(to bottom, hsl(249, 18%, 14%), hsl(266, 19%, 14%));
  background-repeat: no-repeat, no-repeat, no-repeat;
  background-position: top, 84% bottom, top;
  background-size: auto, 72rem, auto;
  text-align: center;
}

/* app wrapper */

/* title */

[id="app-title"] {
  color: var(--col-neutral-white);
  text-transform: uppercase;
  font-size: clamp(1.3rem, 5vw, 1.7rem);
  letter-spacing: 3px;
  max-width: 23ch;
  text-align: center;
  margin-inline: auto;
}

@media screen and (min-width: 43.75rem) {
  [id="app-title"] {
    max-width: revert;
  }
}

.next-holiday-text {
  color: var(--col-primary-soft-red-top);
}

@media screen and (min-width: 43.75rem) {
  .countdown-background-style-wrapper {
    background-size: auto, auto, auto;
    margin-inline: auto;
  }
}

/* button to start default holiday countdown */

.back-of-start-timer,
.front-of-start-timer {
  border-radius: 8px;
}

.back-of-start-timer {
  padding: 0;
  --btn-bg: var(--col-neutral-dark-blue-bottom);
  margin-block: auto;
  align-self: center;
  /* using display: flex; and margin-block: auto to center button vertically */
  /* margin-block: 180px;
  margin-block-end: 314px; */
  opacity: 1;
  transition: opacity 500ms ease-out;
}

/* when user click on button change attribute button-pressed="true"
apply display: none to that element
*/

.front-of-start-timer {
  /* this element is a span which is an inline element
  its width will be intrinsic to the content
  we declared display: block;
  to make its width the size of its parent the button which is the background
  */
  /* --btn-bg: red; */
  /***  
  we declared --btn-bg and --btn-fg on this element parent which is
  .back-of-start-timer with this selector [role="button"] with these declarations
  
  background-color: var(--btn-bg, var(--col-neutral-white));
  color: var(--btn-fg, var(--col-primary-soft-red-bottom));

  if we declare these code
  --btn-bg: red;
  --btn-fg: white; on .back-of-start-timer
  and we didnt declare any background-color or color on this element then
  this element will inherit background-color and color from its parent which is
  element with class .back-of-start-timer

  any element with attribute role="button" can use custom variables --btn-bg and --btn-fg
  however declarations below will not make bg of element with this class red and color
  var(--col-primary-soft-red-bottom) because we didn't tell the browser which property we
  want to assign property value --btn-bg and --btn-fg to
  --btn-bg: red;
  --btn-fg: var(--col-primary-soft-red-bottom);
  if we want code above to work we have to use these code
  background-color: var(--btn-bg);
  color: var(--btn-fg)
  
  ***/
  display: block;
  font-size: 1.7rem;
  padding: 16px;
  background-color: var(--col-neutral-white);
  color: var(--col-primary-soft-red-bottom);
  transform: translateY(-8px);
  transition: transform 500ms ease-in;
}

.back-of-start-timer:hover .front-of-start-timer {
  transform: translateY(-12px);
  transition: transform 500ms ease-in;
}

/* .back-of-start-timer:focus .front-of-start-timer {
  transform: translateY(-12px);
  transition: transform 500ms ease-in;
} */

.back-of-start-timer:active .front-of-start-timer {
  transform: translateY(-2px);
  transition: transform 500ms ease-out;
}

/* .back-of-start-timer:not(:active) .front-of-start-timer {
  transform: translateY(-10px);
  transition: transform 500ms ease-out;
} */

.back-of-start-timer[button-pressed="true"] {
  opacity: 0;
  transition: opacity 500ms ease-in;
}

.style-wrapper {
  display: none;
}

/* .back-of-start-timer[button-pressed="false"] + .style-wrapper {
  display: none;
} */

.back-of-start-timer[button-pressed="true"] + .style-wrapper {
}

/* digits */

[class~="countdown-digits-container"] {
  margin-block-start: 72px;
  display: flex;
  gap: 8px;
  /* display: grid;
  grid-template-columns: repeat(auto-fill, minmax(85px, 1fr));
  justify-items: center; */
  width: min-content;
  margin-inline: auto;
}

.countdown-digits-container.fade,
.timer-controls-buttons.fade {
  opacity: 0;
  transition: opacity 350ms ease-out;
}

/* [class~="countdown-digits-container"] > * + * {
  margin-inline-start: 8px;
} */

/* [class~="countdown-digits-container"] .digit-text-wrapper:not(:last-child) {
  margin-inline-end: 8px;
} */

/* [class~="countdown-digits-container"] .digit-text-wrapper:not(:first-child) {
  margin-inline-start: 8px;
} */

/* individual digit container */

.countdown-digit-container {
  display: grid;
  /* for used with half circle at center of digits */
  position: relative;
  transform: translateY(-5px);
  border-radius: 4px;
  overflow: hidden;
}

.digit-back,
.digit-top,
.digit-bottom {
  grid-column: 1 / -1;
  grid-row: 1/-1;
  padding: 14px;
  padding-block: 10px;
}
.digit-text-wrapper div[id] {
  font-size: 2.5rem;
  /* desktop 3.9rem */
}

.digit-text-wrapper {
  text-align: center;
  /* border: 1px solid antiquewhite; */
}

.countdown-digit-black-bg {
  background-color: var(--col-neutral-black-blue-bg);
  border-bottom-left-radius: 10px;
  border-bottom-right-radius: 10px;
}

/* half circle at center of digits */

.countdown-digit-container::before,
.countdown-digit-container::after {
  content: "";
  display: block;
  /* desktop size 
  width: 11px;
  height: 11px;
  
  top: calc(50% - 6px);
  */
  width: 8px;
  height: 8px;
  top: calc(50% - 5px);
  position: absolute;
  border-radius: 50%;
  background-color: var(--col-neutral-black-blue-bg);
}

.countdown-digit-container::before {
  /* 
  desktop size
  left: -5px;
  */
  left: -4px;
  z-index: 1;
}

.countdown-digit-container::after {
  right: -4px;
  /* 
  desktop size
  right: -5px;
  */
}

.digit-top {
  color: var(--col-primary-soft-red-top);
  background-color: var(--col-neutral-dark-blue-top);
  clip-path: polygon(0% 0%, 100% 0%, 100% 50%, 0% 50%);
}

.digit-bottom {
  clip-path: polygon(0 50%, 100% 50%, 100% 100%, 0 100%);
}

.digit-back,
.digit-bottom {
  color: var(--col-primary-soft-red-bottom);
  background-color: var(--col-neutral-dark-blue-bottom);
}

.date-time-text {
  font-size: 0.5rem;
  display: inline-block;
  font-weight: normal;
  letter-spacing: 2px;
  margin-block-start: 10px;
}

/* digit bottom flip animation use ease-out: fast at first then slow */

.digit-bottom {
  transform: rotateX(180deg);
  opacity: 0;
}

.flip-bottom-transition {
  transform: rotateX(0deg);
  opacity: 1;
  transition: transform 700ms ease-out, opacity 700ms ease-out;
}

.flip-animation {
  animation: flipDigitBottom 970ms ease-out infinite forwards;
  /* animation-delay: ; */
}

@keyframes flipDigitBottom {
  0% {
    opacity: 0;
    transform: rotateX(180deg);
  }
  100% {
    opacity: 1;
    transform: rotateX(0deg);
  }
}

/* timer control buttons */

.timer-controls-buttons {
  display: grid;
  grid-template-columns: repeat(2, 110px);
  width: max-content;
  margin-inline: auto;
  gap: 8px;
  margin-block-start: 32px;
}

/* modal */

[id="modal-one-title"] {
  font-size: 1rem;
  margin-block-end: 8px;
}

div[id="modal-one"] {
  max-width: 600px;
  /* margin-block-start: 145px; */
  position: absolute;
  top: 20%;
  left: 0;
  right: 0;
  /* width: max-content; */
  margin-inline: auto;
  font-size: 0.8rem;
  padding-inline: 11px;
  /* when custom ending date button is not pressed this element goes behind button element
  so user can click on button.
  then when we assign value "true" to user-clicked attr of button with 
  class modal-launcher-back we will declare z-index: revert to show
  modal with select inputs
  */
}

@media screen and (min-width: 43.75rem) {
  [class~="countdown-digits-container"] {
    margin-block-start: 42px;
    gap: 18px;
  }
  .digit-text-wrapper div[id] {
    font-size: 7.1rem;
  }
  .countdown-digit-black-bg {
    border-radius: 8px;
  }
  .countdown-digit-container {
    transform: translateY(-10px);
    border-radius: 8px;
  }
  .countdown-digit-container::before,
  .countdown-digit-container::after {
    width: 16px;
    height: 16px;
    top: calc(50% - 10px);
  }
  .countdown-digit-container::before {
    left: -8px;
  }
  .countdown-digit-container::after {
    right: -8px;
  }
  .date-time-text {
    font-size: 1rem;
    letter-spacing: 5px;
  }
  [id="modal-one-title"],
  div[id="modal-one"] {
    font-size: 1.4rem;
  }
  [id="modal-one-title"] {
    margin-block-end: 20px;
  }
  div[id="modal-one"] {
    top: 18%;
  }
}

/* empty input modal */

.require-inputs-modal-bg-wrapper,
.incorrect-user-date-time-modal-bg-wrapper {
  display: none;
  position: fixed;
  inset: 0;
  background: hsla(0, 0%, 0%, 0.7);
}

.list-empty-inputs {
  padding: 0;
  list-style: none;
  color: var(--col-primary-soft-red-bottom);
}

[id="modal-two"],
[id="modal-three"] {
  font-size: 1.2rem;
  max-width: 500px;
  height: min-content;
  inset: 0;
  position: absolute;
  margin: auto;
  background: var(--col-neutral-dark-blue-top);
  color: var(--col-neutral-white);
  border-radius: 8px;
  padding-inline: 16px;
  left: 35px;
  right: 35px;
}

@media screen and (min-width: 43.75rem) {
  [id="modal-two"],
  [id="modal-three"] {
    font-size: 1.4rem;
  }
}

/* date and time incorrect modal */

.minute-input-incorrect {
  display: none;
}

.incorrect-date-time {
  /*  ::first-letter pseudo-element selector works on block level element
  also works on inline-block*/
  /* display inline-block declaration is causing firefox to
add inline spacing on the incorrect date time element 
might have to use JS to capitalize our first letter

.incorrect-date-time::first-letter {
  text-transform: uppercase;
}

we will use JS to capitalize first letter of
span element with class incorrect-date-time

*/
  /* display: inline-block; */
}
/* using grid area */

.date-input-wrapper {
  text-align: left;
  display: grid;
  gap: 8px;
  grid-template-columns: repeat(2, min-content 1fr);
  grid-template-areas:
    "label-month select-month label-hour select-hour"
    "label-day select-day label-minute select-minute"
    "label-year select-year label-meridiem select-meridiem";
  align-items: center;
}

/* label elements */

label[for="month"] {
  grid-area: label-month;
}
label[for="day"] {
  grid-area: label-day;
}
label[for="year"] {
  grid-area: label-year;
}
label[for="hours"] {
  grid-area: label-hour;
}
label[for="minutes"] {
  grid-area: label-minute;
}
label[for="meridiem"] {
  grid-area: label-meridiem;
}

/* select element */

select[id="month"]:invalid {
  border-color: red;
}

select[id="month"] {
  grid-area: select-month;
}
select[id="day"] {
  grid-area: select-day;
}
select[id="year"] {
  grid-area: select-year;
}
select[id="hours"] {
  grid-area: select-hour;
}
select[id="minutes"] {
  grid-area: select-minute;
}
select[id="meridiem"] {
  grid-area: select-meridiem;
}

button[type="submit"] {
  margin-block-start: 20px;
}

/* .date-time-wrapper {
  margin-block: 10px;
} */

/* button launch ending date modal */

[class~="modal-launcher-back"]:focus [class="modal-launcher-front"],
[class~="modal-launcher-back"]:hover [class="modal-launcher-front"] {
  transform: translate(0px);
  transition: transform 500ms ease-out;
}

[class~="modal-launcher-back"] {
  margin-block-start: 72px;
  /* margin-block-end: 72px; */
  /* margin-block-end: 125px; */
  background-color: var(--col-neutral-dark-blue-bottom);
  border-radius: 5px;
  padding: 0;
  display: block;
  margin-inline: auto;
}

[class="modal-launcher-front"],
button[type="submit"],
.timer-control-btn {
  padding: 8px;
  color: var(--col-primary-soft-red-bottom);
  background-color: var(--col-neutral-white);
  border-radius: 5px;
  font-size: 1.4rem;
}

[class="modal-launcher-front"] {
  display: block;
  transform: translate(4px, -6px);
  transition: transform 500ms ease-in;
}

/* opacity effect on modal */

/* [class="modal-launcher-back"][user-clicked="true"] {
  display: none;
} */

[class~="modal-launcher-back"][user-clicked="true"] + div[id="modal-one"] {
  opacity: 1;
  transition: opacity 1000ms ease-in;
  /* z-index: revert; */
}

[class~="modal-launcher-back"][user-clicked="false"] + div[id="modal-one"] {
  opacity: 0;
  transition: opacity 500ms ease-out;
  /* z-index: -1 was making the modal with select inputs
  to fade quicker than we wanted
  */
  /* z-index: -1; */
}

/* opacity effect on starting date button */

[class~="modal-launcher-back"][user-clicked="false"] {
  opacity: 1;
  transition: opacity 1000ms ease-in;
}
[class~="modal-launcher-back"][user-clicked="true"] {
  opacity: 0;
  transition: opacity 260ms ease-out;
}

.close-modal-btn {
  display: flex;
  margin-block-end: 16px;
  margin-inline-start: auto;
  background: transparent;
}

.close-modal-btn svg {
  width: 32px;
  height: 32px;
}

.close-modal-btn svg path {
  fill: var(--col-primary-soft-red-bottom);
}

@media screen and (min-width: 43.75rem) {
  [class~="modal-launcher-back"] {
    font-size: 1.5rem;
  }
  .date-input-wrapper {
    gap: 10px;
  }
  /* different animation/transition at desktop for modal one. this will be standard for all screen sizes */
  /* .countdown-digits-container.fade {
    opacity: 0;
    transition: opacity 350ms ease-out;
  } */
  /*  this works but might not be best for accessibility

  [class~="modal-launcher-back"][user-clicked="false"] + div[id="modal-one"] {
    transform: translateY(0);
    
  }

  [class~="modal-launcher-back"][user-clicked="true"] + div[id="modal-one"] {
    transform: translateY(-180px);
    transition: transform 800ms linear 390ms;
    
  }*/
}

/* social media icons */

.social-media-icons {
  margin-block: 30px;
  margin-block-start: auto;
  /* we had border around app-style-wrapper
  which did not allow for margin-collapse with starting date button
  and container for social media icon
  had to use margin-block-start on this element
  */
  /* when we moved border on around app-style-wrapper
  margin-top on this element margin-bottom on starting date button
  collapsed. we can remove the declaration margin-top on this element
  add more margin-bottom on starting date button
  margin-block-start: 62px;
  */
}

/* hover/focus effect */

[class="social-media-icons"] a:hover path,
[class="social-media-icons"] a:focus path {
  fill: var(--col-primary-soft-red-bottom);
}

[class="social-media-icons"] a {
  display: inline-block;
}

[class="social-media-icons"] > * + * {
  margin-inline-start: 8px;
}

[class="social-media-icons"] svg {
  display: inline-block;
  width: 24px;
}

[class="social-media-icons"] svg path {
  fill: var(--col-primary-grayish-blue);
}

@media screen and (min-width: 37.5rem) {
  [class="social-media-icons"] svg {
    width: 30px;
  }
}

@media screen and (min-width: 43.75rem) {
  .social-media-icons {
    margin-block-end: 0px;
  }
  [class="social-media-icons"] > * + * {
    margin-inline-start: 28px;
    margin-block: 48px;
  }
}

.hide {
  display: none;
}

.display-revert {
  display: revert;
}

/* add display: none to the parent of the element we want to transition on to the page */

@import url("https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600;700&display=swap");

:root {
  --clr-primary-red: hsl(0, 100%, 74%);
  --clr-primary-green: hsl(154, 59%, 51%);
  --clr-accent-blue: hsl(248, 32%, 49%);
  --clr-dark-blue: hsl(249, 10%, 26%);
  --clr-grayish-blue: hsl(246, 25%, 77%);

  --fs-200: 0.9375rem;
  --fs-300: 1rem;
  --fs-400: 1.25rem;
  --fs-500: 1.5rem;
  --fs-600: 1.75rem;
  --fs-700: 2rem;

  --spacer-xxs: 0.5rem;
  --spacer-xs: 0.8rem;
  --spacer-s: 1rem;
  --spacer-m: 1.5rem;
  --spacer-l: 2rem;

  --fw-400: 400;
  --fw-500: 500;
  --fw-600: 600;
  --fw-700: 700;

  --ff-poppins: "Poppins", sans-serif;
}

/* reset */

*,
*::before,
*::after {
  box-sizing: border-box;
}

h1,
h2,
h3,
h4,
p,
body {
  margin: 0;
  /* figure, dl, and dd have default margin */
  /* font-weight: 100; */
}

h1,
h2,
h3,
h4 {
  line-height: 1;
}

p {
  line-height: 1.4;
  font-size: var(--fs-400);
}

a {
  text-decoration: none;
  color: var(--link-fg, var(--clr-neutral-900));
  font-weight: var(--fw-700);
  font-size: var(--fs-300);
}

a:hover,
a:focus {
  text-decoration: underline;
}

img {
  /* using object-fit for images. we have to set a height or a min-height on the image and the width of 100% 
  exception to the rule of setting a height. we can sometime use it on a child element.
  */
  max-width: 100%;
  /* we use max-width: 100% so when we have an img element inside of a div and we want to use flex which means the div will be a flex item
    the img will shrink and grow as its parent element shrink and grows
    */
  display: block;
  height: auto;
}

/* ul[class],
li[class] {
  list-style: none;
  padding: 0;
} */

/* Inherit fonts for inputs and buttons */
input,
button,
textarea,
select {
  font: inherit;
  color: inherit;
}

button {
  border: none;
}

button,
input {
  display: block;
}

/* Remove all animations and transitions for people that prefer not to see them */
@media (prefers-reduced-motion: reduce) {
  *,
  *::before,
  *::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}

/* reset */

body {
  line-height: 1.5;
  font-family: var(--ff-poppins);
  color: #fff;
}

/* utilities */

.columns {
  display: flex;
  flex-flow: column;
}

.columns > * {
  flex-basis: 100%;
}

.columns > * + * {
  margin: var(--col-gap, 1rem) 0 0 0;
}

[class*="col-"] {
  flex-basis: var(--flex-col, 100%);
}

.col-1 {
  --flex-col: 25%;
}
.col-2 {
  --flex-col: 50%;
}
.col-3 {
  --flex-col: 75%;
}

.flow-content > * + * {
  margin: var(--gap, 1rem) 0 0 0;
}

[class*="bg-"] {
  background: var(--bg, #fff);
  color: var(--fg, #000);
}

[class*="-btn"] {
  background: var(--btn-bg, #fff);
  color: var(--btn-fg, #000);
}

.bg-dark {
}

.bg-light {
}

.bg-accent {
}

/* hide h2 which are title for our section element */
.visually-hidden:not(:focus):not(:active) {
  clip: rect(0 0 0 0);
  clip-path: inset(50%);
  height: 1px;
  overflow: hidden;
  position: absolute;
  white-space: nowrap;
  width: 1px;
}

/* hide h2 which are title for our section element */

/* utilities */

/* general styles */

input {
  color: hsl(251, 10%, 0%);
  font-weight: var(--fw-600);
  font-size: var(--fs-200);
}

.try-free-btn,
.claim-btn,
.form {
  border-radius: 0.5em;
}

/* general styles */

/* general layout */
/* general layout */

/* individual sections */

.wrapper {
  max-width: 62.5em;
  padding: 2em 1.5em;
}

.form-component {
  background-image: url("images/bg-intro-mobile.png");
  background-color: var(--clr-primary-red);
  min-height: 100vh;
}

.text-content {
  text-align: center;
}

.text-content-title {
  font-size: calc(var(--fs-500) + 0.2rem);
  line-height: 1.3;
}

.text-content-description {
  font-size: var(--fs-300);
  font-weight: var(--fw-500);
  margin: 1.5rem 0 0 0;
  line-height: 1.6;
}

/* form */
form[action="#"] {
  background-color: #fff;
  border: 0.1em solid blue;
  display: flex;
  flex-flow: column;
  padding: 1.3em;
  margin: 1.7em 0 0 0;
  box-shadow: inset 0 -0.3em rgb(0, 0, 0, 0.2);
}

form[action="#"] > * {
  flex-basis: 100%;
}

/* buttons */

.try-free-btn {
  --btn-bg: var(--clr-accent-blue);
  --btn-fg: #fff;
  padding: 1.5em 3em;
  margin: 4.3em 0 0 0;
  box-shadow: inset 0 -0.3em rgb(107, 148, 107, 0.3);
}

.claim-btn {
  text-transform: uppercase;
  padding: 1em 2em;
  box-shadow: inset 0 -0.3em rgb(107, 148, 107, 0.3);
  font-weight: var(--fw-500);
  --btn-bg: var(--clr-primary-green);
  --btn-fg: #fff;
}

/* term-services */

.terms-services {
  color: var(--clr-grayish-blue);
  font-size: 0.8rem;
  text-align: center;
  line-height: 1.9;
}

.terms-services-link {
  color: var(--clr-primary-red);
  font-size: inherit;
}

/* individual sections */

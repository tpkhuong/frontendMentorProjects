@import url("https://fonts.googleapis.com/css2?family=Open+Sans&family=Poppins:wght@400;600&display=swap");

:root {
  --clr-primary-violet: hsl(257, 40%, 49%);
  --clr-primary-magenta: hsl(300, 69%, 71%);

  --fs-200: 0.9375rem;
  --fs-300: 1rem;
  --fs-400: 1.25rem;
  --fs-500: 1.5rem;
  --fs-600: 1.75rem;
  --fs-700: 2rem;

  --spacer-xxs: 0.5rem;
  --spacer-xs: 0.8rem;
  --spacer-s: 1rem;
  --spacer-m: 1.5rem;
  --spacer-l: 2rem;

  --fw-200: 200;
  --fw-300: 300;
  --fw-400: 400;
  --fw-500: 500;
  --fw-600: 600;
  --fw-700: 700;

  --ff-open-sans: "Open Sans", sans-serif;
  --ff-poppins: "Poppins", sans-serif;
}

/* reset */

*,
*::before,
*::after {
  box-sizing: border-box;
}

h1,
h2,
h3,
h4,
p,
body {
  margin: 0;
  /* figure, dl, and dd have default margin */
  /* font-weight: 100; */
}

h1,
h2,
h3,
h4 {
  line-height: 1;
}

p {
  line-height: 1.3;
}

a {
  text-decoration: none;
  color: var(--link-fg, var(--clr-neutral-900));
  font-weight: var(--fw-700);
  font-size: var(--fs-300);
}

a:hover,
a:focus {
  text-decoration: underline;
}

img {
  /* using object-fit for images. we have to set a height or a min-height on the image and the width of 100% 
  exception to the rule of setting a height. we can sometime use it on a child element.
  */
  max-width: 100%;
  /* we use max-width: 100% so when we have an img element inside of a div and we want to use flex which means the div will be a flex item
    the img will shrink and grow as its parent element shrink and grows
    */
  display: block;
  height: auto;
}

/* ul[class],
li[class] {
  list-style: none;
  padding: 0;
} */

/* Inherit fonts for inputs and buttons */
input,
button,
textarea,
select {
  font: inherit;
  color: inherit;
}

/* button {
  border: none;
}

button,
input {
  display: block;
} */

/* Remove all animations and transitions for people that prefer not to see them */
@media (prefers-reduced-motion: reduce) {
  *,
  *::before,
  *::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}

/* reset */

/* utilties */

/* container wrapper */

.max-width {
  /* or the width we want our container/parent element to be */
  max-width: 200px;
  margin-inline-start: auto;
  margin-inline-end: auto;
  padding-inline-start: 16px;
  padding-inline-end: 16px;
}

/* container wrapper */

.flow-content > * + * {
  margin: var(--gap, 1rem) 0 0 0;
}

.columns {
  display: flex;
  flex-flow: column;
}

.columns > * + * {
  margin: var(--flex-gap, 1rem) 0 0 0;
}

.columns > * {
  flex-basis: 100%;
}

[class*="col-"] {
  flex-basis: var(--flex-col, 100%);
}

.col-1 {
  flex-basis: 25%;
}
.col-2 {
  flex-basis: 50%;
}
.col-3 {
  flex-basis: 75%;
}

[class*="bg-"] {
  background-color: var(--fg, hsl(0, 100%, 100%));
  color: var(--bg, hsl(0, 0%, 0%));
}

.bg-dark {
}

.bg-light {
}

.bg-accent {
}

/* hide h2 which are title for our section element */
.visually-hidden:not(:focus):not(:active) {
  clip: rect(0 0 0 0);
  clip-path: inset(50%);
  height: 1px;
  overflow: hidden;
  position: absolute;
  white-space: nowrap;
  width: 1px;
}

.hide {
  display: none;
}

.hide-off-left {
  position: absolute;
  top: -9999px;
  left: -9999px;
  overflow: hidden;
}

/* hide h2 which are title for our section element */

/* utilties */

/* general layout */

html,
body {
  height: 100%;
}

body {
  font-family: var(--ff-open-sans);
  color: hsl(0, 100%, 100%);
}

/* general layout */

/* general styles */
/* general styles */

/* individual sections */

/* logo img */

.wrapper {
  max-width: 75rem;
  margin: auto;
}

.logo-container {
  max-width: 12rem;
}

/* logo img */

/* background: image and color */
.landing-page {
  background-image: url("images/bg-mobile.svg");
  background-color: var(--clr-primary-violet);
  padding: 2.5rem 1.5rem;
  text-align: center;
  display: flex;
}

.content-container {
  margin: 4rem 0;
}

@media screen and (min-width: 84rem) {
  .logo-container {
    max-width: 14rem;
  }
  .landing-page {
    padding: 3rem 4rem;
    height: 100%;
    background-size: cover;
  }
  .content-container {
    display: flex;
  }

  .content-container > * {
    flex-basis: 100%;
  }
}

/* text-content */

.main-title {
  font-family: var(--ff-poppins);
  font-size: var(--fs-600);
  line-height: 1.2;
  margin: 3rem 0 0 0;
}

.main-description {
  margin: 1.5rem 0 0 0;
  font-size: var(--fs-300);
  line-height: 1.5;
}

button[type="submit"] {
  color: var(--clr-primary-violet);
  margin: 2rem 0 0 0;
  padding: 0.7rem 0;
  border: none;
  border-radius: 100vw;
  width: 13rem;
  -webkit-box-shadow: 0px 5px 14px 0px hsla(0, 0%, 0%, 0.66);
  box-shadow: 0px 5px 14px 0px hsla(0, 0%, 0%, 0.66);
}

.social-icons > * + * {
  margin: 0 0 0 0.5rem;
}

.icon-container {
  display: inline-flex;
  font-size: var(--fs-400);
  justify-content: center;
  align-items: center;
  border: 2px solid hsl(0, 100%, 100%);
  border-radius: 50%;
  width: 2.5rem;
  height: 2.5rem;
}

button[type="submit"]:hover {
  background-color: var(--clr-primary-magenta);
  color: hsl(0, 100%, 100%);
}

@media screen and (min-width: 84rem) {
  .text-content-container {
    text-align: left;
    margin: 0 0 0 2rem;
  }
  .main-title {
    font-size: calc(var(--fs-700) + 0.5rem);
  }
  .main-description {
    font-size: var(--fs-400);
  }
  button[type="submit"] {
    width: 12rem;
    font-size: var(--fs-400);
  }
  .social-icons {
    width: max-content;
    margin-left: auto;
  }
}

.icon-container:hover {
  border-color: var(--clr-primary-magenta);
}

.icon-container:hover i[class] {
  color: var(--clr-primary-magenta);
}
/* individual sections */
